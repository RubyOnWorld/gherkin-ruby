#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require_relative "lexer"
  require_relative "../ast"

module Gherkin
  class Parser < Racc::Parser

module_eval(<<'...end gherkin.y/module_eval...', 'gherkin.y', 36)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.run(code)
    p @tokens if show_tokens
    do_parse
  end

  def next_token
    @tokens.shift
  end
...end gherkin.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,     4,     5,     6,     7,     9,    10,    11,    12 ]

racc_action_check = [
     0,     1,     3,     4,     5,     7,     8,     9,    10 ]

racc_action_pointer = [
    -3,     1,   nil,   -10,     3,     2,   nil,    -7,    -6,     5,
     6,   nil,   nil ]

racc_action_default = [
    -6,    -6,    -1,    -6,    -6,    -2,    13,    -6,    -3,    -6,
    -6,    -4,    -5 ]

racc_goto_table = [
     1,     2,     8 ]

racc_goto_check = [
     1,     2,     3 ]

racc_goto_pointer = [
   nil,     0,     1,    -5 ]

racc_goto_default = [
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 14, :_reduce_1,
  2, 15, :_reduce_2,
  4, 15, :_reduce_3,
  2, 16, :_reduce_none,
  3, 16, :_reduce_none ]

racc_reduce_n = 6

racc_shift_n = 13

racc_token_table = {
  false => 0,
  :error => 1,
  :NEWLINE => 2,
  :FEATURE => 3,
  :BACKGROUND => 4,
  :SCENARIO => 5,
  :TAG => 6,
  :GIVEN => 7,
  :WHEN => 8,
  :THEN => 9,
  :AND => 10,
  :BUT => 11,
  :TEXT => 12 }

racc_nt_base = 13

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NEWLINE",
  "FEATURE",
  "BACKGROUND",
  "SCENARIO",
  "TAG",
  "GIVEN",
  "WHEN",
  "THEN",
  "AND",
  "BUT",
  "TEXT",
  "$start",
  "Root",
  "Feature",
  "Description" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'gherkin.y', 14)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'gherkin.y', 18)
  def _reduce_2(val, _values, result)
     result = AST::Feature.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'gherkin.y', 20)
  def _reduce_3(val, _values, result)
     result = AST::Feature.new(val[1]) 
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Gherkin
